# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-11-30 11:04
from __future__ import unicode_literals

from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields
import yandex_maps.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryPlacemark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Example: District of city - Name', max_length=60, unique=True, verbose_name='title')),
                ('active', models.BooleanField(default=True, verbose_name='Active category')),
            ],
            options={
                'ordering': ['title'],
                'verbose_name': 'Category of placemark',
                'verbose_name_plural': 'Categories of placemarks',
            },
        ),
        migrations.CreateModel(
            name='CategoryPolygon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, unique=True, verbose_name='title')),
                ('active', models.BooleanField(default=True, verbose_name='Active category')),
            ],
            options={
                'ordering': ['title'],
                'verbose_name': 'Category of territory',
                'verbose_name_plural': 'Categories of territories',
            },
        ),
        migrations.CreateModel(
            name='CategoryPolyline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, unique=True, verbose_name='title')),
                ('active', models.BooleanField(default=True, verbose_name='Active category')),
            ],
            options={
                'ordering': ['title'],
                'verbose_name': 'Category of route',
                'verbose_name_plural': 'Categories of routes',
            },
        ),
        migrations.CreateModel(
            name='CustomIcon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=30, unique=True, verbose_name='Title')),
                ('image', models.ImageField(upload_to=yandex_maps.utils.make_upload_path, validators=[yandex_maps.utils.validate_image], verbose_name='Image')),
                ('size_x', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Width - First time is automatically calculated.', max_digits=4, verbose_name='Size X')),
                ('size_y', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Height - First time is automatically calculated.', max_digits=4, verbose_name='Size Y')),
                ('offset_x', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Left, right - First time is automatically calculated.', max_digits=4, verbose_name='Offset X')),
                ('offset_y', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Up, down - First time is automatically calculated.', max_digits=4, verbose_name='Offset Y')),
                ('active', models.BooleanField(default=True, verbose_name='Active icon')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'ordering': ['id'],
                'verbose_name': 'Custom icon',
                'verbose_name_plural': 'Custom icons',
            },
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, unique=True, verbose_name='Title')),
                ('latitude', models.CharField(default='0', help_text='Latitude center of the map', max_length=20, verbose_name='Latitude')),
                ('longitude', models.CharField(default='0', help_text='Longitude center of the map', max_length=20, verbose_name='Longitude')),
                ('image', models.ImageField(blank=True, null=True, upload_to=yandex_maps.utils.make_upload_path, validators=[yandex_maps.utils.validate_image], verbose_name='Custom icon for cluster')),
                ('size_x', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Width - First time is automatically calculated.', max_digits=4, verbose_name='Size X')),
                ('size_y', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Height - First time is automatically calculated.', max_digits=4, verbose_name='Size Y')),
                ('offset_x', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Left, right - First time is automatically calculated.', max_digits=4, verbose_name='Offset X')),
                ('offset_y', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Up, down - First time is automatically calculated.', max_digits=4, verbose_name='Offset Y')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('active', models.BooleanField(default=True, verbose_name='Active map')),
                ('zoom', models.PositiveIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18)], default=3, verbose_name='Zoom')),
                ('icon', models.CharField(default='islands#blueClusterIcons', max_length=50, verbose_name='Standard icon for cluster')),
                ('color', models.CharField(default='#1e98ff', help_text='Only for standard icons', max_length=7, verbose_name='Color cluster')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'ordering': ['id'],
                'verbose_name': 'Map',
                'verbose_name_plural': 'Maps',
            },
        ),
        migrations.CreateModel(
            name='Placemark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon_content', models.CharField(blank=True, default='', max_length=60, verbose_name='Text on icon')),
                ('hint_content', models.TextField(default='', max_length=255, unique=True, verbose_name='Hint')),
                ('balloon_content', models.TextField(blank=True, default='', verbose_name='Extended information')),
                ('icon_name', models.CharField(default='islands#blueHomeIcon', max_length=50, verbose_name='Icon name')),
                ('color', models.CharField(default='#1e98ff', max_length=7, verbose_name='Color')),
                ('coordinates', models.CharField(default='[0.0,0.0]', max_length=60, verbose_name='Coordinates')),
                ('active', models.BooleanField(default=True, verbose_name='Active placemark')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('category', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='map', chained_model_field='map', on_delete=django.db.models.deletion.CASCADE, related_name='placemark_category', to='yandex_maps.CategoryPlacemark', verbose_name='Category')),
                ('map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='placemark_map', to='yandex_maps.Map', verbose_name='Map')),
            ],
            options={
                'ordering': ['-id'],
                'verbose_name': 'Placemark',
                'verbose_name_plural': 'Placemarks',
            },
        ),
        migrations.CreateModel(
            name='Polygon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hint_content', models.TextField(default='', max_length=255, unique=True, verbose_name='Name of territory')),
                ('balloon_content', models.TextField(blank=True, default='', verbose_name='Extended information')),
                ('stroke_width', models.PositiveIntegerField(default=2, verbose_name='Stroke width')),
                ('stroke_color', models.CharField(default='#1e98ff', max_length=7, verbose_name='Line color')),
                ('stroke_opacity', models.CharField(choices=[(b'1.0', b'1.0'), (b'0.9', b'0.9'), (b'0.8', b'0.8'), (b'0.7', b'0.7'), (b'0.6', b'0.6'), (b'0.5', b'0.5'), (b'0.4', b'0.4'), (b'0.3', b'0.3'), (b'0.2', b'0.2'), (b'0.1', b'0.1')], default='1.0', max_length=3, verbose_name='Opacity line')),
                ('fill_color', models.CharField(default='#1e98ff', max_length=7, verbose_name='Fill color')),
                ('fill_opacity', models.CharField(choices=[(b'1.0', b'1.0'), (b'0.9', b'0.9'), (b'0.8', b'0.8'), (b'0.7', b'0.7'), (b'0.6', b'0.6'), (b'0.5', b'0.5'), (b'0.4', b'0.4'), (b'0.3', b'0.3'), (b'0.2', b'0.2'), (b'0.1', b'0.1')], default='1.0', max_length=3, verbose_name='Fill opacity')),
                ('coordinates', models.TextField(default='', verbose_name='Coordinates')),
                ('active', models.BooleanField(default=True, verbose_name='Active territory')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('category', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='map', chained_model_field='map', on_delete=django.db.models.deletion.CASCADE, related_name='polygon_category', to='yandex_maps.CategoryPolygon', verbose_name='Category')),
                ('map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='polygon_map', to='yandex_maps.Map', verbose_name='Map')),
            ],
            options={
                'ordering': ['-id'],
                'verbose_name': 'Territory',
                'verbose_name_plural': 'Territories',
            },
        ),
        migrations.CreateModel(
            name='Polyline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hint_content', models.TextField(default='', max_length=255, unique=True, verbose_name='Route name')),
                ('balloon_content', models.TextField(blank=True, default='', verbose_name='Extended information')),
                ('stroke_width', models.PositiveIntegerField(default=5, verbose_name='Stroke width')),
                ('stroke_color', models.CharField(default='#1e98ff', max_length=7, verbose_name='Line color')),
                ('stroke_opacity', models.CharField(choices=[(b'1.0', b'1.0'), (b'0.9', b'0.9'), (b'0.8', b'0.8'), (b'0.7', b'0.7'), (b'0.6', b'0.6'), (b'0.5', b'0.5'), (b'0.4', b'0.4'), (b'0.3', b'0.3'), (b'0.2', b'0.2'), (b'0.1', b'0.1')], default='1.0', max_length=3, verbose_name='Opacity line')),
                ('coordinates', models.TextField(default='', verbose_name='Coordinates')),
                ('active', models.BooleanField(default=True, verbose_name='Active route')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('category', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='map', chained_model_field='map', on_delete=django.db.models.deletion.CASCADE, related_name='polyline_category', to='yandex_maps.CategoryPolyline', verbose_name='Category')),
                ('map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='polyline_map', to='yandex_maps.Map', verbose_name='Map')),
            ],
            options={
                'ordering': ['-id'],
                'verbose_name': 'Route',
                'verbose_name_plural': 'Routes',
            },
        ),
        migrations.CreateModel(
            name='SubCategoryPlacemark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Example: Shops, banks, cafes, ...', max_length=60, unique=True, verbose_name='title')),
                ('active', models.BooleanField(default=True, verbose_name='Active category')),
                ('map', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategory', to='yandex_maps.Map', verbose_name='Map')),
            ],
            options={
                'ordering': ['title'],
                'verbose_name': 'Subcategory of placemark',
                'verbose_name_plural': 'Subcategories of placemarks',
            },
        ),
        migrations.AddField(
            model_name='placemark',
            name='subcategory',
            field=smart_selects.db_fields.ChainedManyToManyField(chained_field='map', chained_model_field='map', related_name='placemark_subcategory', to='yandex_maps.SubCategoryPlacemark', verbose_name='Subcategory'),
        ),
        migrations.AddField(
            model_name='categorypolyline',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_polyline', to='yandex_maps.Map', verbose_name='Map'),
        ),
        migrations.AddField(
            model_name='categorypolygon',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_polygon', to='yandex_maps.Map', verbose_name='Map'),
        ),
        migrations.AddField(
            model_name='categoryplacemark',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_placemark', to='yandex_maps.Map', verbose_name='Map'),
        ),
    ]
